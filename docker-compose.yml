services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_INSIDE_PORT}"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - cloudservice
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: valkey/valkey:latest
    container_name: valkey-cache
    ports:
      - "${REDIS_OUTSIDE_PORT}:${REDIS_INSIDE_PORT}"
    command: ["redis-server", "--aclfile", "/data/redis.acl"]
    volumes:
      - cache-data:/data
      - ./redis.acl:/data/redis.acl
    networks:
      - cloudservice
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "-u", "${REDIS_HOST}://${REDIS_USER}:${REDIS_PASSWORD}@localhost:${REDIS_INSIDE_PORT}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  datamigration: # using gomig to create database for postgres
    image: ayayaakasvin/gomig:latest
    volumes:
      - ./backend/migrations:/app/migration
    command: [
      "-host=db",
      "-port=${POSTGRES_INSIDE_PORT}",
      "-user=${POSTGRES_USER}",
      "-password=${POSTGRES_PASSWORD}",
      "-dbname=${POSTGRES_DB}",
      "-up",
      "-path=${MIGRATION_PATH}"
    ]
    networks:
      - cloudservice
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}r -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5


  backend:
    build: ./backend/.
    volumes:
      - ${OUTSIDE_FILES_FOLDER_PATH}:${INSIDE_FILES_FOLDER_PATH}
    environment:
      JWT_SECRET_KEY: ${JWT_KEY}
      CONFIG_PATH: ${CONFIG_PATH}
      DB_HOST: db
      DB_PORT: ${POSTGRES_INSIDE_PORT}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_INSIDE_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - cloudservice

  front:
    image: nginx:latest
    volumes:
      - ./front/dist/up-down-front/browser:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/cert.pem:/etc/nginx/certs/cert.pem
      - ./nginx/key.pem:/etc/nginx/certs/key.pem
      # - /home/ayayasvin/.local/share/mkcert/rootCA.pem:/etc/ssl/certs/mkcert-rootCA.pem
    ports:
      - "80:80" 
      - "443:443"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - cloudservice
      

volumes:
  db-data:
  cache-data:
  upload-data:
networks:
  cloudservice: